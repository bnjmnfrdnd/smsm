<AuthorizeView>
    @page "/Settings"
    @using smsm.Data.Models
    @using smsm.Data.Services
    @using Microsoft.AspNetCore.Identity
    @inject OptionService optionService
    @inject UserService userService

    <PageTitle>Settings</PageTitle>

    @if (userService.IsAdmin().Result)
    {
        @if (options == null)
        {
            <p><em>Loading...</em></p>
        }
        else
        {
            <div class="row justify-content-evenly">
                <div class="container col-lg-5 col-md-12 col-sm-12 mt-2">
                    <div class="row">
                        <div class="card-custom p-5">
                            <div class="card-body-custom">
                                <h4>IMDb API Key</h4>
                                <div class="form-group mt-3">
                                    <div class="input-group mb-3">
                                        <InputText @bind-Value="imdbApiKey" class="form-control"></InputText>
                                        <div class="input-group-append">
                                            <input type="button" @onclick='() => SaveOption("IMDB_API_KEY", imdbApiKey)' Class="btn btn-primary" value="Save">
                                        </div>
                                    </div>
                                    <p><span class="oi oi-info"></span> Free tier IMDb accounts only allow up to <b>100</b> API calls per day.</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="container col-lg-5 col-md-12 col-sm-12 mt-2">
                    <div class="row">
                        <div class="card-custom p-5">
                            <div class="card-body-custom">
                                <h4>Users</h4>
                                <div class="table-responsive">
                                    <table class="table table-striped">
                                        <thead>
                                            <tr>
                                                <th>Username</th>
                                                <th>Email Confirmed</th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var user in users)
                                            {
                                                <tr>
                                                    <td>@user.UserName</td>
                                                    <td>
                                                        @if (@user.EmailConfirmed)
                                                        {
                                                            <span class="oi oi-circle-check" style="color:green"></span>
                                                        }
                                                        else
                                                        {
                                                            <span class="oi oi-circle-x" style="color: red"></span>
                                                        }
                                                    </td>
                                                    <td>
                                                        <span class="oi oi-trash action-buttons" @onclick="() => ShowModal(user)"></span>
                                                    </td>
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    }
    else
    {
        <h3>You do not have access to this page.</h3>
    }

    <Modal @ref="deleteUserModal">
        <ModalContent Centered>
            <ModalHeader>
                <ModalTitle>Delete User</ModalTitle>
                <CloseButton />
            </ModalHeader>
            <ModalBody>
                <Field>
                    <Label>Are you sure you want to delete this user?</Label>
                </Field>
            </ModalBody>
            <ModalFooter>
                <Button Color="Color.Secondary" Clicked="@HideModal">Cancel</Button>
                <Button Color="Color.Danger" Clicked="@DeleteUser">Continue</Button>
            </ModalFooter>
        </ModalContent>
    </Modal>

    @code {
        private List<Option>? options;
        private string imdbApiKey = String.Empty;
        private List<IdentityUser> users;
        private IdentityUser userToBeDeleted;
        private Modal deleteUserModal;

        private Task ShowModal(IdentityUser user)
        {
        userToBeDeleted = user;
        return deleteUserModal.Show();
        }

        private Task HideModal()
        {
        return deleteUserModal.Hide();
        }

        protected override async Task OnInitializedAsync()
        {
        options = await optionService.GetOptionsAsync();
        users = await userService.GetUsersAsync();

        if (options != null && options.Count != 0)
        {
            imdbApiKey = options.SingleOrDefault(x => x.Type == "IMDB_API_KEY").Value;
        }
        }

        async private void SaveOption(string type, string value)
        {
        options = await optionService.SaveOptionAsync(type, value);
        }

        async private Task DeleteUser()
        {
        users = await userService.DeleteUser(userToBeDeleted);
        HideModal();
        }
    }
</AuthorizeView>
