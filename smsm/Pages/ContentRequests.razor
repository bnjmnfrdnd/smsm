@page "/Requests"

@using smsm.Data.Models
@using smsm.Data.Services
@inject ContentService contentService
@using Microsoft.AspNetCore.Components.Forms

<PageTitle>Requests</PageTitle>

@*<div class="container">*@
@if (contentRequestForm)
{
    <h3>New Content Request</h3>

    <form @onsubmit="SaveNewContentRequest">
        <div class="card-custom">
            <div class="card-body-custom">
                <div class="row">
                    <div class="form-group col-12">
                        <label for="newContentRequestTypeInput">Type</label>
                        <select class="form-control" id="newContentRequestTypeInput" @bind="contentRequestModel.Type">
                            <option value=""></option>
                            <option value="Movie">Movie</option>
                            <option value="TV Series">TV Series</option>
                            <option value="Documentary">Documentary</option>
                        </select>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-lg-6 col-sm-12">
                        <label for="newContentRequestTitleInput">Title</label>
                        <input type="text" class="form-control" id="newContentRequestTitleInput" @bind-value="contentRequestModel.Title">
                    </div>
                    <div class="form-group col-lg-6 col-sm-12">
                        <label for="newContentRequestYearInput">Year</label>
                        <select class="form-control" id="newContentRequestTypeInput" @bind="contentRequestModel.Year">
                            @for(int i = DateTime.Now.Year; i >= DateTime.Now.Year - 100; i--) {                                
                                <option value="@i">@i</option>
                            }                            
                        </select>
                    </div>
                </div>
                <div class="row">
                    <div class="form-group col-lg-6 col-sm-12">
                        <label for="newContentRequestCommentsInput">Comments</label>
                        <input type="text" class="form-control" id="newContentRequestCommentsInput" @bind-value="contentRequestModel.Comments">
                    </div>
                    <div class="form-group col-lg-6 col-sm-12">
                        <label for="newContentRequestImdbIdInput">IMDB ID</label>
                        <input type="text" class="form-control" id="newContentRequestImdbIdInput" @bind-value="contentRequestModel.ImdbId">
                    </div>
                </div><div class="row">
                    <div class="form-group col-lg-6 col-sm-12 mt-3">
                        <input type="submit" class="btn btn-primary" value="Submit" />
                        <input type="button" class="btn btn-secondary" value="Cancel" @onclick="ShowHideContentRequestForm" />
                    </div>
                </div>
            </div>
        </div>
    </form>
}
else
{
    @if (contentRequests == null)
    {
        <p><em>Loading...</em></p>
    }
    else
    {
        <button type="button" @onclick="() => ContentRequestForm(null)" class="btn btn-primary mb-3">New Request</button>
        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Type</th>
                    <th>Title</th>
                    <th>Year</th>
                    <th>Comments</th>
                    <th>IMDB ID</th>
                    <th>Requested by</th>
                    <th>Complete</th>
                    <th>Actions</th>
                </tr>
            </thead>
            <tbody>

                @foreach (var contentRequest in contentRequests)
                {
                    <tr>
                        <td>@contentRequest.CreatedDateTime.ToShortDateString()</td>
                        <td>@contentRequest.Type</td>
                        <td>@contentRequest.Title</td>
                        <td>@contentRequest.Year</td>
                        <td>@contentRequest.Comments</td>
                        <td><a href="https://www.imdb.com/title/@contentRequest.ImdbId" target="_blank">@(contentRequest.ImdbId == null ? "" : contentRequest.ImdbId.ToUpper())</a></td>
                        <td>@contentRequest.UserName</td>
                        <td>
                            @if (@contentRequest.IsComplete)
                            {
                                <span class="oi oi-circle-check" style="color:green"></span>
                            }
                            else
                            {
                                <span class="oi oi-circle-x" style="color: red"></span>
                            }
                        </td>

                        <td>
                            @if (@contentRequest.IsComplete)
                            {
                                <span class="oi oi-circle-x" @onclick="() => ChangeContentRequestStatus(contentRequest.Id)" style="cursor:pointer; color: rebeccapurple"></span>
                            }
                            else
                            {
                                <span class="oi oi-circle-check" @onclick="() => ChangeContentRequestStatus(contentRequest.Id)" style="cursor:pointer; color: rebeccapurple"></span>
                            }
                            <span class="oi oi-pencil" @onclick="() => ContentRequestForm(contentRequest)" style="cursor:pointer; color: rebeccapurple; margin-left: 25px;"></span>
                            <span class="oi oi-trash" @onclick="() => DeleteContentRequest(contentRequest)" style="cursor:pointer; color: rebeccapurple; margin-left: 25px;"></span>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    }
}
@*</div>*@

@code {
    public bool contentRequestForm = false;
    private List<ContentRequest>? contentRequests;
    private ContentRequest contentRequestModel = null;

    protected override async Task OnInitializedAsync()
    {
        contentRequests = await contentService.GetContentRequestsAsync();
    }

    private async Task SaveNewContentRequest()
    {
        contentRequests = await contentService.SaveContentRequest(contentRequestModel);
        contentRequestModel = null; 
        ShowHideContentRequestForm();
    }

    private async Task DeleteContentRequest(ContentRequest contentRequest)
    {
        contentRequests = await contentService.DeleteContentRequest(contentRequest);
    }

    private void ContentRequestForm(ContentRequest contentRequest)
    {
        if (contentRequest == null)
        {
            contentRequestModel = new ContentRequest();
        }
        else
        {
            contentRequestModel = contentRequest;
        }
        ShowHideContentRequestForm();
    }

    private void ShowHideContentRequestForm()
    {
        contentRequestForm = !contentRequestForm;
    }

    private async void ChangeContentRequestStatus(int id)
    {
        contentRequests = await contentService.ChangeContentRequestStatus(id);
    }
}
